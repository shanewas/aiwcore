{
  "name": "aiw-core",
  "description": "Aiw Core",
  "author": {
    "name": "Ferntech Solutions Ltd.",
    "email": "shanewas@ferntechsolutions.com",
    "url": "https://ferntechsolutions.com"
  },
  "contributors": [
    {
      "name": "Shanewas Ahmed Nabil",
      "email": "shanewasahmed@gmail.com",
      "url": "https://github.com/shanewas"
    },
    {
      "name": "Tanzeer Ahmed Hossain",
      "url": "https://github.com/redviper2017"
    },
    {
      "name": "Nadib Hussain",
      "url": "https://github.com/NadibHussain"
    },
    {
      "name": "Omar Hasan",
      "url": "https://github.com/omar115"
    }
  ],
  "license": "MIT",
  "version": "0.1.0",
  "private": true,
  "build": {
    "productName": "AIW Core",
    "appId": "com.ferntechsolutions.aiw_core",
    "files": [
      "dist/",
      "node_modules/",
      "frontend/build",
      "frontend/node_modules/",
      "frontend/public",
      "frontend/package.json",
      "backend/",
      "core/",
      "package.json"
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis",
        "msi"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "rpm",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "publish": {
      "provider": "github",
      "owner": "ferntechsolutions",
      "repo": "aiwcore",
      "private": true
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ferntechsolutions/aiwcore.git"
  },
  "main": "core/electron.js",
  "homepage": "./",
  "jest": {
    "API_URL": "http://localhost:9000",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleDirectories": [
      "node_modules",
      "frontend/node_modules"
    ],
    "setupFiles": [
      "./internals/scripts/CheckBuildsExist.js"
    ]
  },
  "keywords": [
    "RPA",
    "Automation",
    "AIWStudio"
  ],
  "peerDependencies": {},
  "dependencies": {
    "body-parser": "^1.19.0",
    "cors": "^2.8.5",
    "csv-parser": "^2.3.2",
    "electron-is-dev": "^1.2.0",
    "electron-reload": "^1.5.0",
    "express": "^4.17.1",
    "jquery": "^3.4.1",
    "moment": "^2.24.0"
  },
  "devDependencies": {
    "concurrently": "^5.1.0",
    "cross-env": "^7.0.2",
    "electron": "^8.2.0",
    "electron-builder": "^22.4.1",
    "electron-rebuild": "^1.10.1",
    "wait-on": "^4.0.1"
  },
  "scripts": {
    "install-all": "npm install && cd frontend && npm install",
    "react-start": "npm start --prefix frontend",
    "react-build": "npm build --prefix frontend",
    "react-test": "react-scripts test --env=jsdom",
    "react-eject": "react-scripts eject",
    "backend-start": "cd backend && node server.js",
    "electron-build": "electron-builder",
    "release": "yarn react-build && electron-builder --publish=always",
    "build": "yarn react-build && yarn electron-build",
    "start": "concurrently \"cross-env BROWSER=none yarn backend-start\" \"cross-env BROWSER=none yarn react-start\" \"wait-on http://localhost:4000 && electron .\""
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
